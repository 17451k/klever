/*
 * Copyright (c) 2018 ISP RAS (http://www.ispras.ru)
 * Ivannikov Institute for System Programming of the Russian Academy of Sciences
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

before: file ("$this")
{
#include <verifier/nondet.h>

// for arg_sign in idr_arg_signs
extern void ldv_idr_init{{ arg_sign.id }}(void);
extern void ldv_idr_alloc{{ arg_sign.id }}(void);
extern void ldv_idr_find{{ arg_sign.id }}(void);
extern void ldv_idr_remove{{ arg_sign.id }}(void);
extern void ldv_idr_destroy{{ arg_sign.id }}(void);
// endfor
}

around: call(void idr_init(struct idr *))
{
	ldv_idr_init{{ idr_arg_sign_patterns[1] }}();
}

around: call(int idr_alloc(struct idr *, void *, int, int, gfp_t))
{
	ldv_idr_alloc{{ idr_arg_sign_patterns[1] }}();
	return ldv_undef_int();
}

around: call(static inline void *idr_find(struct idr *, int))
{
	ldv_idr_find{{ idr_arg_sign_patterns[1] }}();
	return ldv_undef_ptr();
}

around: call(void idr_remove(struct idr *, int))
{
	ldv_idr_remove{{ idr_arg_sign_patterns[1] }}();
}

around: call(void idr_destroy(struct idr *))
{
	ldv_idr_destroy{{ idr_arg_sign_patterns[1] }}();
}
