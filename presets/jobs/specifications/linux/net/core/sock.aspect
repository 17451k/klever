/*
 * Copyright (c) 2018 ISP RAS (http://www.ispras.ru)
 * Ivannikov Institute for System Programming of the Russian Academy of Sciences
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

before: file ("$this")
{
#include <linux/types.h>

void ldv_before_release_sock(void);
void ldv_past_lock_sock_nested(void);
bool ldv_lock_sock_fast(void);
void ldv_unlock_sock_fast(void);
}

after: call(void lock_sock_nested(..))
{
	ldv_past_lock_sock_nested();
}

before: call(void release_sock(..))
{
	ldv_before_release_sock();
}

around: execution(static inline void unlock_sock_fast(..))
{
	ldv_unlock_sock_fast();
}


around: call(bool lock_sock_fast(..))
{
	return ldv_lock_sock_fast();
}
