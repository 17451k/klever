{
  "templates": {
    "Empty": {
      "description": "...",
      "plugins": ["Weaver"]
    },
    "Userspace": {
      "description": "...",
      "plugins": [
        {
          "EMG": {
            "initialize requirements": true,
            "check final state": true,
            "source analysis": {
              "callstack deep search": 3
            },
            "intermediate model options": [
              {
                "genericFunctions": {
                  "infinite call": false,
                  "initialize strings as null terminated": false,
                  "functions to call": ["\\w*main"]
                }
              }
            ],
            "translation options": {
              "entry point": "ldv_main",
              "direct control functions calls": true,
              "nested automata": true,
              "allocate with sizeof": true,
              "allocate external": true,
              "environment model file": "environment_model.c",
              "code additional aspects": [],
              "propogate headers to instrumented files": true,
              "additional headers": [
                "verifier/common.h",
                "verifier/nondet.h",
                "verifier/memory.h",
                "userspace/ldv.h"
              ]
            }
          }
        },
        {
          "RSG": {
            "common sets model": "counter",
            "common models": {
              "verifier/common.c": {},
              "verifier/gcc.c": {},
              "verifier/nondet.c": {},
              "verifier/reference memory.c": {},
              "userspace/verifier/memory.c": {},
              "userspace/ldv.c": {},
              "userspace/string.c": {},
              "userspace/stdlib.c": {},
              "userspace/stdio.c": {}
            }
          }
        },
        "Weaver",
        {
          "FVTP": {
            "merge source files": true,
            "verifier profile": "reachability",
            "verifier": {
              "name": "CPAchecker",
              "version": "trunk:31140"
            },
            "result processing": {
              "coverage": "lightweight",
              "collect function names": true
            }
          }
        }
      ]
    },
    "Linux kernel modules": {
      "description": "...",
      "plugins": [
        {
          "EMG": {
            "entry point": "main",
            "initialize requirements": true,
            "check final state": true,
            "source analysis": {
              "callstack deep search": 3,
              "macros white list": "linux/emg/macros white list.json"
            },
            "intermediate model options": [
              {
                "linuxModule": {
                  "dump instances": false,
                  "convert statics to globals": true,
                  "add registration guards": true,
                  "ignore missed callbacks": true,
                  "delete unregistered processes": true,
                  "implicit callback calls": true,
                  "generate new resource interfaces": false,
                  "callback comment": "Invoke callback {0} from {1}.",
                  "action comments": {
                    "dispatch": {
                      "register": "Register {} callbacks.",
                      "instance_register": "Register {} callbacks.",
                      "deregister": "Deregister {} callbacks.",
                      "instance_deregister": "Deregister {} callbacks.",
                      "irq_register": "Register {} interrupt handler.",
                      "irq_deregister": "Deregister {} interrupt handler."
                    },
                    "receive": {
                      "register": "Begin {} callbacks invocations scenario.",
                      "instance_register": "Begin {} callbacks invocations scenario.",
                      "deregister": "Finish {} callbacks invocations scenario.",
                      "instance_deregister": "Finish {} callbacks invocations scenario."
                    }
                  }
                }
              },
              {
                "linuxInsmod": {
                  "init": "module_init",
                  "exit": "module_exit",
                  "kernel_initialization": [
                    "early_initcall",
                    "pure_initcall",
                    "core_initcall",
                    "core_initcall_sync",
                    "postcore_initcall",
                    "postcore_initcall_sync",
                    "arch_initcall",
                    "arch_initcall_sync",
                    "subsys_initcall",
                    "subsys_initcall_sync",
                    "fs_initcall",
                    "fs_initcall_sync",
                    "rootfs_initcall",
                    "device_initcall",
                    "device_initcall_sync",
                    "late_initcall",
                    "late_initcall_sync",
                    "console_initcall",
                    "security_initcall"
                  ],
                  "kernel": false
                }
              },
              {
                "genericManual": {"enforce replacement": true}
              }
            ],
            "translation options": {
              "debug output": false,
              "self parallel processes": false,
              "self parallel model": false,
              "always sequential processes": ["linux/initialization"],
              "direct control functions calls": true,
              "nested automata": true,
              "allocate with sizeof": true,
              "allocate external": false,
              "environment model file": "environment_model.c",
              "code additional aspects": [],
              "additional headers": [
                "linux/ldv/common.h",
                "linux/ldv/err.h",
                "verifier/common.h",
                "verifier/gcc.h",
                "verifier/nondet.h",
                "verifier/memory.h",
                "verifier/thread.h"
              ]
            }
          }
        },
        {
          "RSG": {
            "common sets model": "counter",
            "opts file": "scripts/mod/empty.c",
            "common models": {
              "linux/drivers/base/dd.c": {"headers": ["linux/device.h"]},
              "linux/drivers/spi.c": {"headers": ["linux/spi/spi.h"]},
              "linux/mm/slab.c": {},
              "linux/err.c": {},
              "linux/kernel/panic.c": {},
              "linux/arch/atomic.c": {},
              "linux/ldv/common.c": {
                "headers": {
                  "Linux 3.14 (base)": [
                    "linux/user_namespace.h",
                    "linux/tty.h",
                    "linux/tty_driver.h",
                    "linux/usb.h",
                    "linux/usb/serial.h",
                    "linux/platform_device.h",
                    "linux/netdevice.h",
                    "linux/net.h",
                    "linux/timer.h",
                    "linux/interrupt.h",
                    "linux/seq_file.h",
                    "linux/i2c.h",
                    "linux/mod_devicetable.h",
                    "linux/device.h",
                    "linux/pm.h",
                    "linux/fs.h",
                    "linux/rtnetlink.h",
                    "net/mac80211.h",
                    "linux/iio/iio.h",
                    "linux/iio/triggered_buffer.h",
                    "linux/cdev.h",
                    "linux/miscdevice.h",
                    "linux/pci.h",
                    "linux/rtc.h",
                    "scsi/scsi_host.h",
                    "linux/pagemap.h",
                    "linux/poll.h",
                    "linux/blkdev.h",
                    "linux/parport.h",
                    "target/target_core_base.h",
                    "target/target_core_backend.h"
                  ],
                  "Linux 3.5": {
                    "exclude": ["linux/iio/triggered_buffer.h"]
                  },
                  "Linux 3.2": {
                    "exclude": [
                      "linux/iio/iio.h",
                      "linux/iio/triggered_buffer.h",
                      "target/target_core_backend.h"
                    ]
                  },
                  "Linux 2.6.33": {
                    "exclude": [
                      "linux/iio/iio.h",
                      "linux/iio/triggered_buffer.h",
                      "target/target_core_base.h",
                      "target/target_core_backend.h"
                    ]
                  },
                  "Linux 4.6.7": {
                    "exclude": [
                      "linux/poll.h"
                    ]
                  }
                }
              },
              "verifier/common.c": {},
              "verifier/gcc.c": {},
              "verifier/nondet.c": {},
              "verifier/reference memory.c": {},
              "linux/verifier/memory.c": {}
            }
          }
        },
        "Weaver",
        {
          "FVTP": {
            "merge source files": true,
            "verifier profile": "reachability",
            "verifier": {
              "name": "CPAchecker",
              "version": "trunk:31140"
            },
            "result processing": {
              "coverage": "lightweight",
              "collect function names": true
            }
          }
        }
      ]
    },
    "Argument signatures for Linux kernel modules": {
      "description": "...",
      "template": "Linux kernel modules",
      "plugins": [
        "EMG",
        {
          "ASE": {"algorithm": "COMPLEX_ID"}
        },
        "TR",
        "RSG",
        "Weaver",
        "FVTP"
      ]
    },
    "Busybox": {
      "description": "...",
      "template": "Userspace",
      "plugins": [
        "EMG",
        {
          "RSG": {
            "common sets model": "counter",
            "opts file": "applets/applets.c",
            "common models": {
              "verifier/common.c": {},
              "verifier/gcc.c": {},
              "verifier/nondet.c": {},
              "verifier/reference memory.c": {},
              "userspace/verifier/memory.c": {},
              "userspace/ldv.c": {},
              "userspace/string.c": {},
              "userspace/stdlib.c": {},
              "userspace/stdio.c": {},
              "userspace/busybox/globals.c": {},
              "userspace/busybox/fork.c": {},
              "userspace/busybox/libbb/appletlib.c": {},
              "userspace/busybox/libbb/verror_msg.c": {},
              "userspace/busybox/libbb/perror_msg.c": {},
              "userspace/busybox/libbb/xfuncs_printf.c": {}
            }
          }
        },
        "Weaver",
        {
          "FVTP": {
            "merge source files": false,
            "verifier profile": "CPAchecker BAM BusyBox",
            "verifier": {
              "name": "CPAchecker",
              "version": "trunk:31140"
            },
            "result processing": {
              "coverage": "lightweight",
              "collect function names": true
            }
          }
        }
      ]
    },
    "Zephyr": {
      "description": "...",
      "plugins": [
        {
          "EMG": {
            "initialize requirements": true,
            "check final state": true,
            "source analysis": {
              "callstack deep search": 3
            },
            "intermediate model options": [
              {
                "zephyrModel": {
                  "infinite call": false,
                  "initialization functions": [
                    "init_cache",
                    "init_mem_slab_module",
                    "init_mbox_module",
                    "uart_console_init",
                    "init_pipes_module",
                    "init_static_pools",
                    "_ioapic_init",
                    "_loapic_init",
                    "_arc_init",
                    "usb_composite_init",
                    "malloc_prepare",
                    "k_sys_work_q_init",
                    "pinmux_initialize",
                    "_bt_uart_init",
                    "mass_storage_init",
                    "main"
                  ]
                }
              },
              {
                "genericManual": {"enforce replacement": true}
              }
            ],
            "translation options": {
              "entry point": "ldv_main",
              "direct control functions calls": true,
              "nested automata": true,
              "allocate with sizeof": true,
              "allocate external": true,
              "environment model file": "environment_model.c",
              "code additional aspects": [],
              "propogate headers to instrumented files": true,
              "additional headers": [
                "verifier/common.h",
                "verifier/nondet.h",
                "verifier/memory.h"
              ]
            }
          }
        },
        {
          "RSG": {
            "common sets model": "counter",
            "opts file": "drivers/interrupt_controller/system_apic.c",
            "common models": {
              "verifier/common.c": {},
              "verifier/gcc.c": {},
              "verifier/nondet.c": {},
              "verifier/reference memory.c": {}
            }
          }
        },
        "Weaver",
        {
          "FVTP": {
            "merge source files": true,
            "verifier profile": "reachability",
            "verifier": {
              "name": "CPAchecker",
              "version": "trunk:31140"
            },
            "result processing": {
              "coverage": "lightweight",
              "collect function names": true
            }
          }
        }
      ]
    }
  },
  "requirements": {
    "empty": {
      "description": "...",
      "template": "Empty"
    },
    "zephyr": {
      "empty": {
        "description": "...",
        "template": "Zephyr"
      },
      "locks": {
        "RSG": {
          "models": {"zephyr/locks.c": {}}}
      }
    },
    "linux": {
      "description": "Linux specifications",
      "template": "Linux kernel modules",
      "alloc": {
        "irq": {
          "description": "...",
          "RSG": {"models": {"linux/alloc/irq.c": {}}}
        },
        "spinlock": {
          "template": "Argument signatures for Linux kernel modules",
          "ASE": {"request aspects": {"linux/kernel/locking/spinlock.request.aspect": {}}},
          "TR": {"templates": {
            "linux/kernel/locking/spinlock.c.tmpl": {},
            "linux/kernel/locking/spinlock.aspect.tmpl": {}
          }},
          "RSG": {"models": {
            "$linux/kernel/locking/spinlock.c": {"sets model": "flag"},
            "linux/alloc/spinlock.c": {}
          }}
        },
        "usb lock": {
          "description": "...",
          "RSG": {"models": {"linux/alloc/usb lock.c": {}}}
        }
      },
      "arch": {"io": {
        "description": "...",
        "RSG": {"models": {"linux/arch/io.c": {}}}
      }},
      "block": {
        "genhd": {
          "description": "...",
          "RSG": {"models": {"linux/block/genhd.c": {}}}
        },
        "queue": {
          "description": "...",
          "RSG": {"models": {"linux/block/queue.c": {}}}
        },
        "request": {
          "description": "...",
          "template": "Linux kernel modules",
          "RSG": {"models": {"linux/block/request.c": {}}}
        }
      },
      "concurrency safety": {
        "description": "Linux concurrency safety",
        "EMG": {
          "entry point": "main",
          "initialize requirements": true,
          "check final state": false,
          "source analysis": {
            "callstack deep search": 3,
            "macros white list": "linux/emg/macros white list.json"
          },
          "intermediate model options": [
            {
              "linuxModule": {
                "dump instances": false,
                "convert statics to globals": true,
                "add registration guards": false,
                "ignore missed callbacks": true,
                "delete unregistered processes": true,
                "implicit callback calls": true,
                "generate new resource interfaces": false,
                "callback comment": "Invoke callback {0} from {1}.",
                "action comments": {
                  "dispatch": {
                    "register": "Register {} callbacks.",
                    "instance_register": "Register {} callbacks.",
                    "deregister": "Deregister {} callbacks.",
                    "instance_deregister": "Deregister {} callbacks.",
                    "irq_register": "Register {} interrupt handler.",
                    "irq_deregister": "Deregister {} interrupt handler."
                  },
                  "receive": {
                    "register": "Begin {} callbacks invocations scenario.",
                    "instance_register": "Begin {} callbacks invocations scenario.",
                    "deregister": "Finish {} callbacks invocations scenario.",
                    "instance_deregister": "Finish {} callbacks invocations scenario."
                  }
                }
              }
            },
            {
              "linuxInsmod": {
                "init": "module_init",
                "exit": "module_exit",
                "kernel_initialization": [
                  "early_initcall",
                  "pure_initcall",
                  "core_initcall",
                  "core_initcall_sync",
                  "postcore_initcall",
                  "postcore_initcall_sync",
                  "arch_initcall",
                  "arch_initcall_sync",
                  "subsys_initcall",
                  "subsys_initcall_sync",
                  "fs_initcall",
                  "fs_initcall_sync",
                  "rootfs_initcall",
                  "device_initcall",
                  "device_initcall_sync",
                  "late_initcall",
                  "late_initcall_sync",
                  "console_initcall",
                  "security_initcall"
                ],
                "kernel": false
              }
            },
            {
              "genericManual": {"enforce replacement": true}
            }
          ],
          "translation options": {
            "debug output": false,
            "self parallel processes": true,
            "self parallel model": false,
            "do not skip signals": true,
            "not self parallel processes": ["linux/initialization"],
            "not self parallel processes from categories": ["usb"],
            "not self parallel processes from scenarios": ["usb_serial_scenario"],
            "direct control functions calls": false,
            "nested automata": true,
            "allocate with sizeof": true,
            "allocate external": false,
            "environment model file": "environment_model.c",
            "code additional aspects": [],
            "additional headers": [
              "linux/ldv/common.h",
              "linux/ldv/err.h",
              "verifier/common.h",
              "verifier/gcc.h",
              "verifier/nondet.h",
              "verifier/memory.h",
              "verifier/thread.h"
            ]
          }
        },
        "RSG": {
          "models": {"linux/concurrency safety/synchronization primitives.c": {}}
        },
        "FVTP": {
          "verifier profile": "race checking",
          "verifier": {
            "name": "CPAchecker",
            "version": "CPALockator-combat-mode:28916"
          },
          "result processing": {
            "expect several witnesses": true
          }
        }
      },
      "drivers": {
        "base": {
          "class": {
            "description": "...",
            "RSG": {"models": {"linux/drivers/base/class.c": {}}}
          },
          "dma-mapping": {
            "description": "...",
            "RSG": {"models": {"linux/drivers/base/dma-mapping.c": {}}}
          }
        },
        "clk1": {
          "description": "...",
          "template": "Argument signatures for Linux kernel modules",
          "ASE": {"request aspects": {"linux/drivers/clk1.request.aspect": {}}},
          "TR": {"templates": [
            "linux/drivers/clk1.c.tmpl",
            "linux/drivers/clk1.aspect.tmpl"
          ]},
          "RSG": {"models": {"$linux/drivers/clk1.c": {}}}
        },
        "clk2": {
          "description": "...",
          "template": "Argument signatures for Linux kernel modules",
          "ASE": {"request aspects": {"linux/drivers/clk2.request.aspect": {}}},
          "TR": {"templates": [
            "linux/drivers/clk2.c.tmpl",
            "linux/drivers/clk2.aspect.tmpl"
          ]},
          "RSG": {"models": {"$linux/drivers/clk2.c": {}}}
        }
      },
      "empty": {
        "description": "..."
      },
      "fs": {"sysfs": {
        "description": "...",
        "RSG": {"models": {"linux/fs/sysfs.c": {}}}
      }},
      "kernel": {
        "locking": {
          "mutex": {
            "description": "...",
            "template": "Argument signatures for Linux kernel modules",
            "ASE": {"request aspects": {"linux/kernel/locking/mutex.request.aspect": {}}},
            "TR": {"templates": {
              "linux/kernel/locking/mutex.c.tmpl": {},
              "linux/kernel/locking/mutex.aspect.tmpl": {}
            }},
            "RSG": {"models": {"$linux/kernel/locking/mutex.c": {"sets model": "flag"}}}
          },
          "rwlock": {
            "description": "...",
            "RSG": {"models": {"linux/kernel/locking/rwlock.c": {}}}
          },
          "spinlock": {
            "description": "...",
            "template": "Argument signatures for Linux kernel modules",
            "ASE": {"request aspects": {"linux/kernel/locking/spinlock.request.aspect": {}}},
            "TR": {"templates": {
              "linux/kernel/locking/spinlock.c.tmpl": {},
              "linux/kernel/locking/spinlock.aspect.tmpl": {}
            }},
            "RSG": {"models": {"$linux/kernel/locking/spinlock.c": {"sets model": "flag"}}}
          }
        },
        "module": {
          "description": "...",
          "RSG": {"models": {"linux/kernel/module.c": {}}}
        },
        "rcu": {
          "update": {
            "lock bh": {
              "description": "...",
              "RSG": {"models": {"linux/kernel/rcu/update/lock bh.c": {}}}
            },
            "lock sched": {
              "description": "...",
              "RSG": {"models": {"linux/kernel/rcu/update/lock sched.c": {}}}
            },
            "lock": {
              "description": "...",
              "RSG": {"models": {"linux/kernel/rcu/update/lock.c": {}}}
            }
          },
          "srcu": {
            "description": "...",
            "RSG": {"models": {"linux/kernel/rcu/srcu.c": {}}}
          }
        },
        "sched": {"completion": {
          "description": "...",
          "template": "Argument signatures for Linux kernel modules",
          "ASE": {"request aspects": {"linux/kernel/sched/completion.request.aspect": {}}},
          "TR": {"templates": {
            "linux/kernel/sched/completion.c.tmpl": {},
            "linux/kernel/sched/completion.aspect.tmpl": {}
          }},
          "RSG": {"models": {"$linux/kernel/sched/completion.c": {}}}
        }}
      },
      "lib": {
        "find_bit": {
          "description": "...",
          "RSG": {"models": {"linux/lib/find_bit.c": {}}}
        },
        "idr": {
          "description": "...",
          "template": "Argument signatures for Linux kernel modules",
          "ASE": {"request aspects": {"linux/lib/idr.request.aspect": {}}},
          "TR": {"templates": {
            "linux/lib/idr.c.tmpl": {},
            "linux/lib/idr.aspect.tmpl": {}
          }},
          "RSG": {"models": {"$linux/lib/idr.c": {}}}
        }
      },
      "memory safety": {
        "description": "Linux memory safety",
        "EMG" : {
          "entry point": "main",
          "initialize requirements": true,
          "check final state": true,
          "source analysis": {
            "callstack deep search": 3,
            "macros white list": "linux/emg/macros white list.json"
          },
          "intermediate model options": [
            {
              "linuxModule": {
                "dump instances": false,
                "convert statics to globals": true,
                "add registration guards": true,
                "ignore missed callbacks": true,
                "delete unregistered processes": true,
                "implicit callback calls": true,
                "generate new resource interfaces": false,
                "callback comment": "Invoke callback {0} from {1}.",
                "action comments": {
                  "dispatch": {
                    "register": "Register {} callbacks.",
                    "instance_register": "Register {} callbacks.",
                    "deregister": "Deregister {} callbacks.",
                    "instance_deregister": "Deregister {} callbacks.",
                    "irq_register": "Register {} interrupt handler.",
                    "irq_deregister": "Deregister {} interrupt handler."
                  },
                  "receive": {
                    "register": "Begin {} callbacks invocations scenario.",
                    "instance_register": "Begin {} callbacks invocations scenario.",
                    "deregister": "Finish {} callbacks invocations scenario.",
                    "instance_deregister": "Finish {} callbacks invocations scenario."
                  }
                }
              }
            },
            {
              "linuxInsmod": {
                "init": "module_init",
                "exit": "module_exit",
                "kernel_initialization": [
                  "early_initcall",
                  "pure_initcall",
                  "core_initcall",
                  "core_initcall_sync",
                  "postcore_initcall",
                  "postcore_initcall_sync",
                  "arch_initcall",
                  "arch_initcall_sync",
                  "subsys_initcall",
                  "subsys_initcall_sync",
                  "fs_initcall",
                  "fs_initcall_sync",
                  "rootfs_initcall",
                  "device_initcall",
                  "device_initcall_sync",
                  "late_initcall",
                  "late_initcall_sync",
                  "console_initcall",
                  "security_initcall"
                ],
                "kernel": false
              }
            },
            {
              "genericManual": {"enforce replacement": true}
            }
          ],
          "translation options": {
            "debug output": false,
            "self parallel processes": false,
            "self parallel model": false,
            "always sequential processes": ["linux/initialization"],
            "direct control functions calls": true,
            "nested automata": true,
            "allocate with sizeof": true,
            "allocate external": true,
            "environment model file": "environment_model.c",
            "code additional aspects": [],
            "additional headers": [
              "linux/user_namespace.h",
              "linux/ldv/common.h",
              "linux/ldv/err.h",
              "verifier/common.h",
              "verifier/gcc.h",
              "verifier/nondet.h",
              "verifier/memory.h",
              "verifier/thread.h"
            ]
          }
        },
        "RSG": {"models": {"linux/memory safety/memory.c": {"headers": ["linux/fb.h"]}}},
        "FVTP": {
          "verifier profile": "memory checking Linux64",
          "verifier": {
            "name": "CPAchecker",
            "version": "trunk:31140"
          }
        }
      },
      "net": {
        "register": {
          "description": "Error handling for netdev in probe()",
          "RSG": {"models": {"linux/net/register.c": {}}}
        },
        "rtnetlink": {
          "description": "...",
          "RSG": {"models": {"linux/net/rtnetlink.c": {}}}
        },
        "sock": {
          "description": "...",
          "RSG": {"models": {"linux/net/sock.c": {}}}
        }
      },
      "test": {
        "environment model specifications": {
          "description": "Requirement intended for testing environment model specifications and the generator",
          "RSG": {"models": {"linux/emg/test_model.c": {}}}
        },
        "environment model specifications with function pointer analysis": {
          "description": "Requirement intended for testing environment model specifications and generator with function pointer analysis",
          "RSG": {"models": {"linux/emg/test_model.c": {}}},
          "FVTP": {
            "verifier profile": "reachability with function pointers",
            "verifier": {
              "name": "CPAchecker",
              "version": "trunk:31140"
            }
          }
        },
        "common": {
          "description": "...",
          "template": "Linux kernel modules",
          "RSG": {"models": {"verifier/common.c": {}}}
        }
      },
      "staging": {
        "linux:alloc": {
          "description": "...",
          "template": "Linux kernel modules",
          "RSG": {"models": {"linux/alloc/memory.c": {}}}
        },
        "linux:fs:char_dev": {
          "description": "...",
          "template": "Linux kernel modules",
          "RSG": {"models": {"linux/fs/char_dev.c": {}}}
        },
        "linux:mmc:sdio_func": {
          "description": "...",
          "template": "Linux kernel modules",
          "RSG": {"models": {"linux/mmc/sdio_func.c": {"headers": [
            "linux/mmc/sdio_func.h",
             "linux/mmc/host.h",
             "linux/mmc/card.h"
          ]}}}
        }
      },
      "usb": {
        "coherent": {
          "description": "...",
          "RSG": {"models": {"linux/usb/coherent.c": {}}}
        },
        "dev": {
          "description": "...",
          "RSG": {"models": {"linux/usb/dev.c": {}}}
        },
        "gadget": {
          "description": "...",
          "RSG": {"models": {"linux/usb/gadget.c": {}}}
        },
        "register": {
          "description": "Error handling for usb register in probe()",
          "RSG": {"models": {"linux/usb/register.c": {}}}
        },
        "urb": {
          "description": "...",
          "RSG": {"models": {"linux/usb/urb.c": {}}}
        }
      }
    },
    "userspace": {
      "description": "Userspace specifications",
      "template": "Userspace",
      "empty": {
        "description": "..."
      },
      "memory safety": {
        "description": "Userspace memory safety",
        "RSG": {"models": {"userspace/memory safety/memory.c": {}}},
        "FVTP": {
          "verifier profile": "memory checking Linux64",
          "verifier": {
            "name": "CPAchecker",
            "version": "trunk:31140"
          }
        }
      }
    },
    "busybox": {
      "description": "Busybox specifications",
      "template": "Busybox",
      "empty": {
        "description": "..."
      },
      "open": {
        "description": "...",
        "RSG": {"models": {"userspace/busybox/file.c": {}}}
      },
      "memory safety": {
        "description": "Busybox memory safety",
        "RSG": {"models": {"userspace/memory safety/memory.c": {}}},
        "FVTP": {
          "verifier profile": "memory checking Linux64",
          "verifier": {
            "name": "CPAchecker",
            "version": "trunk:31140"
          }
        }
      }
    }
  }
}
