#!/usr/bin/python3
import os
import json
import sys
import consulate
import subprocess

sys.path.append(os.path.join(os.path.dirname(__file__), os.path.pardir))

import utils.bridge as bridge

expect_file = os.environ["CONTROLLER_NODE_CONFIG"]
with open(expect_file, encoding="utf8") as fh:
    conf = json.load(fh)

# Sign in
session = bridge.Session(conf["Klever Bridge"]["name"], conf["Klever Bridge"]["user"], conf["Klever Bridge"]["password"])

# Submit scheduler status
status = {
    "VerifierCloud": "DISCONNECTED",
    "Klever": "DISCONNECTED"
}

ks_out = subprocess.getoutput('ps -aux | grep [n]ative-scheduler')
if ks_out and ks_out != '':
    status["Klever"] = "HEALTHY"
vc_out = subprocess.getoutput('ps -aux | grep [v]erifiercloud-scheduler')
if vc_out and vc_out != '':
    status["VerifierCloud"] = "HEALTHY"

data = {
    "statuses": json.dumps(status, ensure_ascii=False, sort_keys=True, indent=4)
}

session.json_exchange("service/set_schedulers_status/", data)

# Sign out
session.sign_out()

# Submit scheduler status to kv storage for debug
session = consulate.Consul()
try:
    session.kv["schedulers"] = json.dumps(status, ensure_ascii=False, sort_keys=True, indent=4)
    exit(0)
except KeyError:
    print("Key-value storage is inaccessible.")
    exit(2)

__author__ = 'Ilja Zakharov <ilja.zakharov@ispras.ru>'
