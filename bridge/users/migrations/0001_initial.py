# Generated by Django 2.1.3 on 2018-12-28 12:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('accuracy', models.SmallIntegerField(default=2, help_text='This setting is used just for the human-readable data format', verbose_name='The number of significant figures')),
                ('data_format', models.CharField(choices=[('raw', 'Raw'), ('hum', 'Human-readable')], default='hum', help_text='Most of dates are not updated automatically, so human-readable dates could become outdated until you reload page by hand', max_length=3, verbose_name='Data format')),
                ('language', models.CharField(choices=[('en', 'English'), ('ru', 'Русский')], default='en', max_length=2, verbose_name='Language')),
                ('role', models.CharField(choices=[('0', 'No access'), ('1', 'Producer'), ('2', 'Manager'), ('3', 'Expert'), ('4', 'Service user')], default='0', max_length=1, verbose_name='Role')),
                ('timezone', models.CharField(default='Europe/Moscow', max_length=255, verbose_name='Time zone')),
                ('assumptions', models.BooleanField(default=False, help_text='This setting turns on visualization of error trace assumptions. This can take very much time for big error traces.', verbose_name='Error trace assumptions')),
                ('triangles', models.BooleanField(default=False, help_text='This setting turns on visualization of error trace closing triangles at the end of each thread.', verbose_name='Error trace closing triangles')),
                ('coverage_data', models.BooleanField(default=False, help_text='This setting turns on visualization of coverage data and its statistic.', verbose_name='Coverage data')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DataView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('0', 'component attributes'), ('1', 'jobTree'), ('2', 'DecisionResults'), ('3', 'reportChildren'), ('4', 'SafesAndUnsafesList'), ('5', 'SafesAndUnsafesList'), ('6', 'UnknownsList'), ('7', 'marksList'), ('8', 'marksList'), ('9', 'marksList'), ('10', 'UnsafeAssMarks'), ('11', 'SafeAssMarks'), ('12', 'UnknownAssMarks'), ('13', 'UnsafeAssReports'), ('14', 'SafeAndUnknownAssReports'), ('15', 'SafeAndUnknownAssReports'), ('16', 'AssociationChanges'), ('17', 'AssociationChanges'), ('18', 'AssociationChanges')], default='1', max_length=2)),
                ('shared', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('view', django.contrib.postgres.fields.jsonb.JSONField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_view',
            },
        ),
        migrations.CreateModel(
            name='PreferableView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('view', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='users.DataView')),
            ],
            options={
                'db_table': 'user_preferable_view',
            },
        ),
        migrations.CreateModel(
            name='SchedulerUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=128, verbose_name='Username')),
                ('password', models.CharField(max_length=128)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'scheduler_user',
            },
        ),
    ]
