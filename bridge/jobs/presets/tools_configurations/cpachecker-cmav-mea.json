{
  "tool": "CPAchecker",
  "version": "cmav",
  "resultfiles": "**/*.graphml",
  "propertyfiles": {
    "${assertion}.prp": "CHECK( init(${entry_point}()), LTL(G ! call(__VERIFIER_error_${assertion_escape}())) )"
  },
  "options": [
    {"-ldv": ""},
    {"-setprop": "cpa.arg.errorPath.graphml=witness.%d.graphml"},
    {"-setprop": "parser.readLineDirectives=true"},
    {"-setprop": "analysis.stopAfterError=false"},
    {"-setprop": "analysis.multiAspectVerification=true"},
    {"-setprop": "analysis.mav.specificationComparator=VIOLATED_PROPERTY"},
    {"-setprop": "cpa.arg.errorPath.exportImmediately=true"},
    {"-setprop": "analysis.mav.stopAfterError=false"},
    {"-setprop": "analysis.mav.relaunchInOneRun=true"},
    {"-setprop": "analysis.mav.assertTimeLimit={{i ${time_limit} / ${number_of_assertions} / 10 ** 3 i}}"},
    {"-setprop": "analysis.mav.idleIntervalTimeLimit={{i ${time_limit} / ${number_of_assertions} / 45 / 10 ** 3 i}}"},
    {"-setprop": "analysis.mav.basicIntervalTimeLimit={{i ${time_limit} / ${number_of_assertions} / 9 / 10 ** 3 i}}"},
    {"-setprop": "analysis.mav.firstIntervalTimeLimit={{i ${time_limit} / ${number_of_assertions} / 9 / 10 ** 3 i}}"},
    {"-setprop": "limits.time.cpu={{i ${time_limit} / 10 ** 3 * 0.99 i}}s"},
    {"-setprop": "analysis.mav.precisionCleanStrategy=FULL"},
    {"-setprop": "analysis.mav.precisionCleanSet=ALL"},
    {"-setprop": "cpa.arg.errorPath.filters=org.sosy_lab.cpachecker.cpa.predicate.counterexamples.ABEBlockCounterexampleFilter"},
    {"-setprop": "counterexample.export.compressWitness=false"},
    {"-heap": "{{i 13/15*${memory_limit} / 10 ** 6 i}}m"}
  ],
  "strategy": {
    "separate assertion": false,
    "external filtering": "model_functions",
    "model": "C file",
    "supported": [
      "CV",
      "SC",
      "RV"
    ]
  },
  "path": ""
}
