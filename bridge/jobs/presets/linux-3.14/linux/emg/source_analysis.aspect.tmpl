around: define(likely(x)) { (x) }

around: define(unlikely(x)) { (x) }

info: execution(static $ $(void)) {
	$fprintf<"$env<CWD>/static-execution.txt","%s %s signature='%s'\n",$path,$func_name,$signature>
}

info: execution(static $ $(..)) {
	$fprintf<"$env<CWD>/static-execution.txt","%s %s signature='%s'\n",$path,$func_name,$signature>
}

info: execution($ $(void)) {
	$fprintf<"$env<CWD>/execution.txt","%s %s signature='%s'\n",$path,$func_name,$signature>
}

info: execution($ $(..)) {
	$fprintf<"$env<CWD>/execution.txt","%s %s signature='%s'\n",$path,$func_name,$signature>
}

info: declare_func(static $ $(void)) {
	$fprintf<"$env<CWD>/static-declare_func.txt","%s %s signature='%s'\n",$path,$func_name,$signature>
}

info: declare_func(static $ $(..)) {
	$fprintf<"$env<CWD>/static-declare_func.txt","%s %s signature='%s'\n",$path,$func_name,$signature>
}

info: declare_func($ $(void)) {
	$fprintf<"$env<CWD>/declare_func.txt","%s %s signature='%s'\n",$path,$func_name,$signature>
}

info: declare_func($ $(..)) {
	$fprintf<"$env<CWD>/declare_func.txt","%s %s signature='%s'\n",$path,$func_name,$signature>
}

around: define(__EXPORT_SYMBOL(sym, sec))
{
}

/* info: expand(__EXPORT_SYMBOL(sym, sec)) {
	$fprintf<"$env<CWD>/exported-symbols.txt","%s %s\n",$path,$arg_val1>
}*/

info: expand(module_init(arg)){
	$fprintf<"$env<CWD>/init.txt","%s %s\n",$path,$arg_val1>
}

info: expand(module_exit(arg)){
	$fprintf<"$env<CWD>/exit.txt","%s %s\n",$path,$arg_val1>
}

// for i in range(max_args_num)
info: expand($({{ arg_patterns[i] }})) {
	$fprintf<"$env<CWD>/expand.txt","%s %s\n",$path,$macro_name>
}
// endfor

info: call( $ $(void)) {
	$fprintf<"$env<CWD>/call-function.txt","%s %s %s %s\n",$func_context_path,$env<CC_IN_FILE>,$func_context_name,$func_name>
}
// for i in range(max_args_num)
info: call($ $({{ arg_patterns[i] }})) {
	$fprintf<"$env<CWD>/call-function.txt","%s %s %s %s {{ arg_printf_patterns[i] }}\n",$func_context_path,$env<CC_IN_FILE>,$func_context_name,$func_name,{{ arg_vals[i] }}>
}
// endfor

info: init_global($ $){
	$fprintf<"$env<CWD>/global.txt","declaration: %s path: %s\n",$signature,$env<CC_IN_FILE>>
	$fprintf_var_init_list<"$env<CWD>/global.txt">
}

info: introduce($ $) {
	$fprintf<"$env<CWD>/typedefs.txt","declaration: %s\n",$signature>
}