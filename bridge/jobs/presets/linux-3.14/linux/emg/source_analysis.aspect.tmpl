/*
 * Copyright (c) 2018 ISP RAS (http://www.ispras.ru)
 * Ivannikov Institute for System Programming of the Russian Academy of Sciences
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * ee the License for the specific language governing permissions and
 * limitations under the License.
 */

around: define(likely(x)) { (x) }

around: define(unlikely(x)) { (x) }

info: execution(static $ $(void)) {
	$fprintf<"$env<CWD>/static-execution.txt","%s signature='%s'\n",$func_name,$signature>
}

info: execution(static $ $(..)) {
	$fprintf<"$env<CWD>/static-execution.txt","%s signature='%s'\n",$func_name,$signature>
}

info: execution($ $(void)) {
	$fprintf<"$env<CWD>/execution.txt","%s signature='%s'\n",$func_name,$signature>
}

info: execution($ $(..)) {
	$fprintf<"$env<CWD>/execution.txt","%s signature='%s'\n",$func_name,$signature>
}

info: declare_func(static $ $(void)) {
	$fprintf<"$env<CWD>/static-declare_func.txt","%s signature='%s'\n",$func_name,$signature>
}

info: declare_func(static $ $(..)) {
	$fprintf<"$env<CWD>/static-declare_func.txt","%s signature='%s'\n",$func_name,$signature>
}

info: declare_func($ $(void)) {
	$fprintf<"$env<CWD>/declare_func.txt","%s signature='%s'\n",$func_name,$signature>
}

info: declare_func($ $(..)) {
	$fprintf<"$env<CWD>/declare_func.txt","%s signature='%s'\n",$func_name,$signature>
}

// for i in range(max_args_num)
info: expand($({{ arg_patterns[i] }})) {
	$fprintf<"$env<CWD>/expand.txt","%s {{ arg_printf_patterns[i] }}\n",$macro_name,{{ arg_vals[i] }}>
}
// endfor

info: call( $ $(void)) {
	$fprintf<"$env<CWD>/call-function.txt","%s %s\n",$func_context_name,$func_name>
}
// for i in range(max_args_num)
info: call($ $({{ arg_patterns[i] }})) {
	$fprintf<"$env<CWD>/call-function.txt","%s %s {{ arg_printf_patterns[i] }}\n",$func_context_name,$func_name,{{ arg_values[i] }}>
}
// endfor

info: init_global($ $){
	$fprintf<"$env<CWD>/global.txt","declaration: %s path: %s\n",$signature,$env<CC_IN_FILE>>
	$fprintf_var_init_list<"$env<CWD>/global.txt">
}

info: introduce($ $) {
	$fprintf<"$env<CWD>/typedefs.txt","declaration: %s\n",$signature>
}