/*
 * Copyright (c) 2018 ISP RAS (http://www.ispras.ru)
 * Ivannikov Institute for System Programming of the Russian Academy of Sciences
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * ee the License for the specific language governing permissions and
 * limitations under the License.
 */

before: file("$this")
{
extern void ldv_dma_map_page(void);
extern void ldv_dma_map_single(void);
extern void ldv_dma_map_single_attrs(void);
extern void ldv_dma_mapping_error(void);
}

around: call(static inline dma_addr_t dma_map_page(struct device *dev, struct page *page, size_t offset, size_t size, enum dma_data_direction dir))
{
	ldv_dma_map_page();
	return ldv_undef_int();
}

around: call(dma_addr_t dma_map_single(struct device *dev, void *cpu_addr, size_t size, enum dma_data_direction dir))
{
	ldv_dma_map_single();
	return ldv_undef_int();
}

around: execution(static inline int dma_mapping_error(struct device *dev, dma_addr_t dma_addr))
{
	ldv_dma_mapping_error();
	return ldv_undef_int();
}

around: execution(static inline dma_addr_t dma_map_single_attrs(struct device *dev, void *ptr, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs))
{
	ldv_dma_map_single_attrs();
	return ldv_undef_int();
}