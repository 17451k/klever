before: file ("$this")
{
// for arg_sign in sdio_func_as_arg_signs
extern void ldv_sdio_claim_host{{ arg_sign.id }}(void);
extern void ldv_sdio_release_host{{ arg_sign.id }}(void);
extern void ldv_check_context{{ arg_sign.id }}(void);
// endfor
}

around: call(void sdio_claim_host(struct sdio_func *func))
{
	/* ASPECT_FUNC_CALL Check that SDIO bus was not claimed */
	ldv_sdio_claim_host{{ sdio_func_as_arg_sign_patterns[1] }}();
}

around: call(void sdio_release_host(struct sdio_func *func))
{
	/* ASPECT_FUNC_CALL Check that SDIO bus was claimed by the same device */
	ldv_sdio_release_host{{ sdio_func_as_arg_sign_patterns[1] }}();
}

before: call(int sdio_enable_func(struct sdio_func *func)) ||
        call(int sdio_disable_func(struct sdio_func *func)) ||
        call(int sdio_claim_irq(struct sdio_func *func, ..)) ||
        call(int sdio_release_irq(struct sdio_func *func)) ||
        call(u8 sdio_readb(struct sdio_func *func, ..)) ||
        call(u16 sdio_readw(struct sdio_func *func, ..)) ||
        call(u32 sdio_readl(struct sdio_func *func, ..)) ||
        call(int sdio_readsb(struct sdio_func *func, ..)) ||
        call(int sdio_writesb(struct sdio_func *func, ..)) ||
        call(u8 sdio_writeb_readb(struct sdio_func *func, ..)) ||
        call(int sdio_memcpy_fromio(struct sdio_func *func, ..)) ||
        call(int sdio_memcpy_toio(struct sdio_func *func, ..)) ||
        call(unsigned char sdio_f0_readb(struct sdio_func *func, ..))
{
	/* ASPECT_FUNC_CALL Check that SDIO bus was claimed */
	ldv_check_context{{ sdio_func_as_arg_sign_patterns[1] }}();
}

around: call(void sdio_writeb(struct sdio_func *func, ..)) ||
        call(void sdio_writew(struct sdio_func *func, ..)) ||
        call(void sdio_writel(struct sdio_func *func, ..)) ||
        call(void sdio_f0_writeb(struct sdio_func *func, ..))
{
	/* ASPECT_FUNC_CALL Check that SDIO bus was claimed */
	ldv_check_context{{ sdio_func_as_arg_sign_patterns[1] }}();
}
