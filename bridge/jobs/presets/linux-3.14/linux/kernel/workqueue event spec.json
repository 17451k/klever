{
	"Linux 3.14 (base)": {
		"kernel model": {
			"queue_work": {
				"comment": "Queue work on a workqueue.",
				"labels": {
					"work_struct": {
						"container": true,
						"parameter": true,
						"interface": [
							"workqueue.work_struct"
						]
					}
				},
				"process": "<assign>.[register].<success> | <fail>",
				"actions": {
					"register": {
						"parameters": [
							"%work_struct%"
						]
					},
					"assign": {
						"comment": "Register",
						"statements": [
							"%work_struct% = $ARG2;"
						]
					},
					"success": {
						"comment": "Successfully queued work on a workqueue",
						"statements": [
							"return true;"
						]
					},
					"fail": {
						"comment": "Failed to queue work on a workqueue",
						"statements": [
							"return false;"
						]
					}
				}
			},
			"flush_work": {
				"comment": "Flush work.",
				"labels": {
					"work_struct": {
						"container": true,
						"parameter": true,
						"interface": [
							"workqueue.work_struct"
						]
					}
				},
				"process": "<assign>.[register].<success> | <fail>",
				"actions": {
					"register": {
						"parameters": [
							"%work_struct%"
						]
					},
					"assign": {
						"comment": "Register",
						"statements": [
							"%work_struct% = $ARG1;"
						]
					},
					"success": {
						"comment": "Successfully flushed work.",
						"statements": [
							"return true;"
						]
					},
					"fail": {
						"comment": "Failed to flush work.",
						"statements": [
							"return false;"
						]
					}
				}
			},
			"flush_delayed_work": {
				"comment": "Flush delayed work.",
				"labels": {
					"delayed_work": {
						"container": true,
						"parameter": true,
						"interface": [
							"workqueue.delayed_work"
						]
					}
				},
				"process": "<assign>.[register].<success> | <fail>",
				"actions": {
					"register": {
						"parameters": [
							"%delayed_work%"
						]
					},
					"assign": {
						"comment": "Register",
						"statements": [
							"%delayed_work% = $ARG1;"
						]
					},
					"success": {
						"comment": "Successfully flushed dwork.",
						"statements": [
							"return true;"
						]
					},
					"fail": {
						"comment": "Failed to flush dwork.",
						"statements": [
							"return false;"
						]
					}
				}
			},
			"queue_delayed_work_on": {
				"comment": "Queue delayed work on.",
				"labels": {
					"delayed_work": {
						"container": true,
						"parameter": true,
						"interface": [
							"workqueue.delayed_work"
						]
					}
				},
				"process": "<assign>.[register].<success> | <fail>",
				"actions": {
					"register": {
						"parameters": [
							"%delayed_work%"
						]
					},
					"assign": {
						"comment": "Register",
						"statements": [
							"%delayed_work% = $ARG3;"
						]
					},
					"success": {
						"comment": "Queue delayed work on - success.",
						"statements": [
							"return true;"
						]
					},
					"fail": {
						"comment": "Queue delayed work on - fail.",
						"statements": [
							"return false;"
						]
					}
				}
			},
			"queue_delayed_work": {
				"comment": "Queue delayed work.",
				"labels": {
					"delayed_work": {
						"container": true,
						"parameter": true,
						"interface": [
							"workqueue.delayed_work"
						]
					}
				},
				"process": "<assign>.[register].<success> | <fail>",
				"actions": {
					"register": {
						"parameters": [
							"%delayed_work%"
						]
					},
					"assign": {
						"comment": "Register",
						"statements": [
							"%delayed_work% = $ARG2;"
						]
					},
					"success": {
						"comment": "Queue delayed work - success.",
						"statements": [
							"return true;"
						]
					},
					"fail": {
						"comment": "Queue delayed work - fail.",
						"statements": [
							"return false;"
						]
					}
				}
			},
			"queue_work_on": {
				"comment": "Queue work on a workqueue.",
				"labels": {
					"work_struct": {
						"container": true,
						"parameter": true,
						"interface": [
							"workqueue.work_struct"
						]
					}
				},
				"process": "<assign>.[register].<success> | <fail>",
				"actions": {
					"register": {
						"parameters": [
							"%work_struct%"
						]
					},
					"assign": {
						"comment": "Register",
						"statements": [
							"%work_struct% = $ARG3;"
						]
					},
					"success": {
						"comment": "Successfully queued work on a workqueue",
						"statements": [
							"return true;"
						]
					},
					"fail": {
						"comment": "Failed to queue work on a workqueue",
						"statements": [
							"return false;"
						]
					}
				}
			}
		},
		"environment processes": {
				"workqueue_scenario": {
					"comment": "Invoke a workqueue callback",
					"labels": {
						"container": {
							"container": true,
							"interface": [
								"workqueue.work_struct"
							]
						}
					},
					"process": "(!register).([callback].(deregister) | (deregister))",
					"actions": {
						"register": {
							"parameters": [
								"%container%"
							]
						},
						"deregister": {
							"condition": [
								"%container% == $ARG1"
							],
							"parameters": [
								"%container%"
							]
						},
						"callback": {
							"comment": "Call the work callback",
							"callback": "%container.func%",
							"parameters": [
								"%container%"
							]
						}
					}
				}
		}
	}
}