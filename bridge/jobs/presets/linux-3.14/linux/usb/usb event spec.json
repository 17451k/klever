{
  "Linux 3.14 (base)": {
    "kernel model": {
      "usb_reset_device": {
        "labels": {},
        "process": "[@usb_reset]",
        "actions": {
          "usb_reset": {
            "parameters": []
          }
        }
      },
      "usb_register_driver": {
        "labels": {
          "usb_driver": {
            "container": true,
            "parameter": true,
            "interface": [
              "usb.usb_driver"
            ]
          },
          "res": {
            "signature": "int a"
          }
        },
        "process": "<pre>.(<assign>.[register] | <none>).<return>",
        "actions": {
          "register": {
            "parameters": [
              "%usb_driver%"
            ]
          },
          "pre": {
            "statements": [
              "%res% = ldv_pre_usb_register_driver();"
            ]
          },
          "assign": {
            "condition": [
              "%res% == 0"
            ],
            "statements": [
              "%usb_driver% = $ARG1;"
            ]
          },
          "none": {
            "condition": [
              "%res% != 0"
            ]
          },
          "return": {
            "statements": [
              "return %res%;"
            ]
          }
        }
      },
      "usb_deregister": {
        "labels": {
          "usb_driver": {
            "container": true,
            "parameter": true,
            "interface": [
              "usb.usb_driver"
            ]
          }
        },
        "process": "<assign>.[deregister]",
        "actions": {
          "deregister": {
            "parameters": [
              "%usb_driver%"
            ]
          },
          "assign": {
            "statements": [
              "%usb_driver% = $ARG1;"
            ]
          }
        }
      }
    },
    "environment processes": {
      "usb_instance": {
        "labels": {
          "container": {
            "container": true,
            "interface": [
              "usb.usb_driver"
            ]
          },
          "resource": {
            "interface": [
              "usb.usb_interface"
            ]
          },
          "usb_device": {
            "interface": [
              "usb.usb_device"
            ]
          },
          "reset_flag": {
            "signature": "bool a",
            "value": "false"
          },
          "probe_retval": {
            "signature": "int a"
          },
          "callback": {
            "callback": true
          }
        },
        "process": "(!instance_register).<alloc>.[probe].(<probe_success>.((usb_reset).[pre].[post] | [suspend].[resume] | [callback] | <null>).[release] | <failed_probe>).<free>.(instance_deregister)",
        "actions": {
          "instance_register": {
            "parameters": [
              "%container%"
            ]
          },
          "instance_deregister": {
            "condition": [
              "%container% == $ARG1"
            ],
            "parameters": [
              "%container%"
            ]
          },
          "alloc": {
            "statements": [
              "%resource% = $ALLOC(%resource%);",
              "%usb_device% = $ALLOC(%usb_device%);",
              "%resource%->dev.parent = & %usb_device%->dev;"
            ]
          },
          "free": {
            "statements": [
              "$FREE(%resource%);",
              "$FREE(%usb_device%);"
            ]
          },
          "callback": {
            "callback": "%callback%",
            "parameters": [
              "%resource%"
            ]
          },
          "probe": {
            "callback": "%container.probe%",
            "parameters": [
              "%resource%"
            ],
            "pre-call": [
              "ldv_pre_probe();"
            ],
            "callback return value": "%probe_retval%",
            "post-call": [
              "%probe_retval% = ldv_post_probe(%probe_retval%);"
            ]
          },
          "release": {
            "callback": "%container.release%",
            "parameters": [
              "%resource%"
            ]
          },
          "suspend": {
            "callback": "%container.suspend%",
            "parameters": [
              "%resource%"
            ]
          },
          "resume": {
            "callback": "%container.resume%",
            "parameters": [
              "%resource%"
            ]
          },
          "pre": {
            "callback": "%container.pre%",
            "parameters": [
              "%resource%"
            ]
          },
          "post": {
            "callback": "%container.post%",
            "parameters": [
              "%resource%"
            ]
          },
          "usb_reset": {},
          "probe_success": {
            "condition": [
              "%probe_retval% == 0"
            ]
          },
          "failed_probe": {
            "condition": [
              "%probe_retval% != 0"
            ]
          },
          "null": {}
        }
      }
    }
  }
}