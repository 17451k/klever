before: file ("$this")
{
#include <linux/spinlock.h>

extern void ldv_read_lock_irqsave(rwlock_t *lock);
extern void ldv_read_unlock_irqrestore(rwlock_t *lock);

extern void ldv_write_lock_irqsave(rwlock_t *lock);
extern void ldv_write_unlock_irqrestore(rwlock_t *lock);

extern void ldv_read_lock(rwlock_t *lock);
extern void ldv_read_unlock(rwlock_t *lock);

extern void ldv_write_lock(rwlock_t *lock);
extern void ldv_write_unlock(rwlock_t *lock);

extern int ldv_read_trylock(rwlock_t *lock);
extern int ldv_write_trylock(rwlock_t *lock);

extern void ldv_read_lock_irq(rwlock_t *lock);
extern void ldv_read_unlock_irq(rwlock_t *lock);

extern void ldv_write_lock_irq(rwlock_t *lock);
extern void ldv_write_unlock_irq(rwlock_t *lock);

extern void ldv_read_lock_bh(rwlock_t *lock);
extern void ldv_read_unlock_bh(rwlock_t *lock);

extern void ldv_write_lock_bh(rwlock_t *lock);
extern void ldv_write_unlock_bh(rwlock_t *lock);
}

around: define(read_lock_irqsave(lock, flags))
{
	ldv_read_lock_irqsave(lock)
}

around: define(read_unlock_irqrestore(lock, flags))
{
	ldv_read_unlock_irqrestore(lock)
}

around: define(write_lock_irqsave(lock, flags))
{
	ldv_write_lock_irqsave(lock)
}

around: define(write_unlock_irqrestore(lock, flags))
{
	ldv_write_unlock_irqrestore(lock)
}

around: define(read_lock(lock))
{
	ldv_read_lock(lock)
}

around: define(read_unlock(lock))
{
	ldv_read_unlock(lock)
}

around: define(write_lock(lock))
{
	ldv_write_lock(lock)
}

around: define(write_unlock(lock))
{
	ldv_write_unlock(lock)
}

around: define(read_trylock(lock))
{
	ldv_read_trylock(lock)
}

around: define(write_trylock(lock))
{
	ldv_write_trylock(lock)
}

around: define(read_lock_irq(lock))
{
	ldv_read_lock_irq(lock)
}

around: define(read_unlock_irq(lock))
{
	ldv_read_unlock_irq(lock)
}

around: define(write_lock_irq(lock))
{
	ldv_write_lock_irq(lock)
}

around: define(write_unlock_irq(lock))
{
	ldv_write_unlock_irq(lock)
}

around: define(read_lock_bh(lock))
{
	ldv_read_lock_bh(lock)
}

around: define(read_unlock_bh(lock))
{
	ldv_read_unlock_bh(lock)
}

around: define(write_lock_bh(lock))
{
	ldv_write_lock_bh(lock)
}

around: define(write_unlock_bh(lock))
{
	ldv_write_unlock_bh(lock)
}