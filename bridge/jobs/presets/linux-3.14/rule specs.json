{
  "templates": {
    "Empty": {
      "description": "...",
      "plugins": ["Weaver"]
    },
    "Linux kernel modules": {
      "description": "...",
      "plugins": [
        {
          "SA": {
            "template aspect": "linux/emg/source_analysis.aspect.tmpl",
            "max arguments number": 30,
            "filter kernel functions": true
          }
        },
        {
          "EMG": {
            "specifications directory": "linux/emg",
            "entry point": "entry_point",
            "translator": "default",
            "callstack deep search": 3,
            "intermediate model options": {
              "ignore missed callbacks": true,
              "map file": "linux/emg/roles match.json"
            },
            "translation options": {
              "dump automata graphs": false,
              "direct control function calls": true,
              "omit all states": true,
              "nested automata": true,
              "omit parallel composition": {
                "dispatch": false,
                "receive": false,
                "call": false,
                "condition": true
              },
              "instance modifier": 1,
              "max instances number": 60,
              "pointer initialization": {
                "structures": true,
                "arrays": true,
                "functions": false,
                "unions": false,
                "primitives": false
              },
              "pointer free": {
                "structures": true,
                "arrays": true,
                "functions": false,
                "unions": false,
                "primitives": false
              },
              "allocate with sizeof": false,
              "allocate external": false
            },
            "additional aspects": ["linux/emg/emg.aspect"]
          }
        },
        {
          "RSG": {
            "model CC options": [
              "-nostdinc",
              "-Iarch/$hdr_arch/include",
              "-Iarch/$hdr_arch/include/generated",
              "-Iinclude",
              "-Iarch/$hdr_arch/include/uapi",
              "-Iarch/$hdr_arch/include/generated/uapi",
              "-Iinclude/uapi",
              "-Iinclude/generated/uapi",
              "-include",
              "include/linux/kconfig.h",
              "-D__KERNEL__",
              "-Wall",
              "-Wundef",
              "-Wstrict-prototypes",
              "-Wno-trigraphs",
              "-fno-strict-aliasing",
              "-fno-common",
              "-Werror-implicit-function-declaration",
              "-Wno-format-security",
              "-fno-delete-null-pointer-checks",
              "-Os",
              "-funit-at-a-time",
              "-pipe",
              "-Wno-sign-compare",
              "-fno-asynchronous-unwind-tables",
              "-fno-reorder-blocks",
              "-fno-ipa-cp-clone",
              "-fno-partial-inlining",
              "-Wframe-larger-than=2048",
              "-fno-stack-protector",
              "-Wno-unused-but-set-variable",
              "-fno-omit-frame-pointer",
              "-fno-optimize-sibling-calls",
              "-fno-inline-functions-called-once",
              "-Wdeclaration-after-statement",
              "-Wno-pointer-sign",
              "-fno-strict-overflow",
              "-fconserve-stack",
              "-Werror=implicit-int",
              "-Werror=strict-prototypes",
              "-DCC_HAVE_ASM_GOTO",
              "-fprofile-arcs",
              "-ftest-coverage"
            ],
            "common sets model": "counter",
            "common models": {
              "linux/err.c": {},
              "linux/device.c": {"headers": ["linux/device.h"]},
              "linux/kzalloc.c": {},
              "linux/ldv/common.c": {},
              "verifier/common.c": {},
              "verifier/nondet.c": {},
              "verifier/memory.c": {},
              "verifier/thread.c": {}
            }
          }
        },
        "Weaver"
      ]
    },
    "Argument signatures for Linux kernel modules": {
      "description": "...",
      "template": "Linux kernel modules",
      "plugins": [
        "SA",
        "EMG",
        {
          "ASE": {"algorithm": "COMPLEX_ID"}
        },
        "TR",
        "RSG",
        "Weaver"
      ]
    }
  },
  "rule specifications": {
    "empty": {
      "description": "...",
      "template": "Empty"
    },
    "linux:empty": {
      "description": "...",
      "template": "Linux kernel modules"
    },
    "linux:emg:test": {
      "description": "Rule specification intended for testing environment model specifications.",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/emg/test_model.c": {"bug kinds": ["linux:emg:test"]}}}
    },
    "linux:alloc:irq": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {
        "linux/ldv/irq.c": {},
        "linux/alloc1.c": {"bug kinds": [
          "linux:alloc:irq::wrong flags",
          "linux:alloc:irq::nonatomic"
        ],
        "automaton": "linux/automata/alloc_irq.spc"}
      }}
    },
    "linux:alloc:spin lock": {
      "description": "...",
      "template": "Argument signatures for Linux kernel modules",
      "ASE": {"request aspects": {"linux/spinlock.request.aspect": {}}},
      "TR": {"templates": {
        "linux/spinlock.c.tmpl": {},
        "linux/spinlock.aspect.tmpl": {}
      }},
      "RSG": {"models": {
        "$linux/spinlock.c": {"sets model": "flag"},
        "linux/alloc2.c": {"bug kinds": [
          "linux:alloc:spin lock::wrong flags",
          "linux:alloc:spin lock::nonatomic"
        ]}
      }}
    },
    "linux:alloc:usb lock": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/alloc3.c": {
        "bug kinds": [
          "linux:alloc:usb lock::wrong flags",
          "linux:alloc:usb lock::nonatomic"
        ],
        "automaton": "linux/automata/alloc_usblock.spc"
      }}}
    },
    "linux:mmc:sdio_func": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/mmc/sdio_func.c": {
        "bug kinds": [
          "linux:mmc:sdio_func::wrong params",
          "linux:mmc:sdio_func::double claim",
          "linux:mmc:sdio_func::release without claim",
          "linux:mmc:sdio_func::unreleased at exit"
        ],
        "headers": [
          "linux/mmc/sdio_func.h",
          "linux/mmc/host.h",
          "linux/mmc/card.h"
        ]
      }}}
    },
    "linux:module": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/module.c": {
        "bug kinds": [
          "linux:module::less initial decrement",
          "linux:module::more initial at exit"
        ],
        "automaton": "linux/automata/module.spc"
      }}}
    },
    "linux:mutex": {
      "description": "...",
      "template": "Argument signatures for Linux kernel modules",
      "ASE": {"request aspects": {"linux/mutex.request.aspect": {}}},
      "TR": {"templates": {
        "linux/mutex.c.tmpl": {},
        "linux/mutex.aspect.tmpl": {},
        "linux/automata/mutex.spc.tmpl": {}
      }},
      "RSG": {"models": {"$linux/mutex.c": {
          "bug kinds": [
            "linux:mutex::one thread:double lock",
            "linux:mutex::one thread:double lock try",
            "linux:mutex::one thread:double unlock",
            "linux:mutex::one thread:locked at exit"
          ],
          "sets model": "flag",
          "automaton": "$linux/automata/mutex.spc"
      }}}
    },
    "linux:spinlock": {
      "description": "...",
      "template": "Argument signatures for Linux kernel modules",
      "ASE": {"request aspects": {"linux/spinlock.request.aspect": {}}},
      "TR": {"templates": {
        "linux/spinlock.c.tmpl": {},
        "linux/spinlock.aspect.tmpl": {},
        "linux/automata/spinlock.spc.tmpl": {}
      }},
      "RSG": {"models": {"$linux/spinlock.c": {
        "bug kinds": [
          "linux:spinlock::one thread:double lock",
          "linux:spinlock::one thread:double lock try",
          "linux:spinlock::one thread:double unlock",
          "linux:spinlock::one thread:locked at exit"
        ],
        "sets model": "flag",
        "automaton": "$linux/automata/spinlock.spc"
      }}}
    },
    "linux:rwlock": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/rwlock.c": {"bug kinds": [
        "linux:rwlock::read lock on write lock",
        "linux:rwlock::more read unlocks",
        "linux:rwlock::read lock at exit",
        "linux:rwlock::double write lock",
        "linux:rwlock::double write unlock",
        "linux:rwlock::write lock at exit"
      ]}}}
    },
    "linux:usb:dev": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {
          "linux/asm/atomic.c": {},
          "linux/usb/dev.c": {"bug kinds": [
            "linux:usb:dev::unincremented counter decrement",
            "linux:usb:dev::less initial decrement",
            "linux:usb:dev::more initial at exit",
            "linux:usb:dev::probe failed"
          ],
          "automaton": "linux/automata/usb_dev.spc"}
        }
      }
    },
    "linux:usb:urb": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/usb/urb.c": {
        "bug kinds": [
          "linux:usb:urb::less initial decrement",
          "linux:usb:urb::more initial at exit"
        ],
        "automaton": "linux/automata/usb_urb.spc"
      }}}
    },
    "linux:usb:coherent": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/usb/coherent.c": {"bug kinds":[
          "linux:usb:coherent::less initial decrement",
          "linux:usb:coherent::more initial at exit"
        ],
        "automaton": "linux/automata/usb_coherent.spc"
      }}}
    },
    "linux:bitops": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/bitops.c": {"bug kinds": ["linux:bitops::offset out of range"]}}}
    },
    "linux:blk:request": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/blk/request.c": {"bug kinds": [
        "linux:blk:request::double get",
        "linux:blk:request::double put",
        "linux:blk:request::get at exit"
      ]}}}
    },
    "linux:rculock": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/rculock.c": {"bug kinds": [
        "linux:rculock::more unlocks",
        "linux:rculock::locked at read section",
        "linux:rculock::locked at exit"
      ]}}}
    },
    "linux:rculockbh": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/rculockbh.c": {"bug kinds": [
        "linux:rculockbh::more unlocks",
        "linux:rculockbh::locked at read section",
        "linux:rculockbh::locked at exit"
      ]}}}
    },
    "linux:rculocksched": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/rculocksched.c": {"bug kinds": [
        "linux:rculocksched::more unlocks",
        "linux:rculocksched::locked at read section",
        "linux:rculocksched::locked at exit"
      ]}}}
    },
    "linux:srculock": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/srculock.c": {"bug kinds": [
        "linux:srculock::more unlocks",
        "linux:srculock::locked at read section",
        "linux:srculock::locked at exit"
      ]}}}
    },
    "linux:completion": {
      "description": "...",
      "template": "Argument signatures for Linux kernel modules",
      "ASE": {"request aspects": {"linux/completion.request.aspect": {}}},
      "TR": {"templates": {
        "linux/completion.c.tmpl": {},
        "linux/completion.aspect.tmpl": {}
      }},
      "RSG": {"models": {"$linux/completion.c": {
          "bug kinds": [
            "linux:comletion::double init",
            "linux:comletion::wait without init"
          ]
      }}}
    },
    "linux:sysfs": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/sysfs.c": {"bug kinds": [
        "linux:sysfs::less initial decrement",
        "linux:sysfs::more initial at exit"
      ]}}}
    },
    "linux:iomem": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/iomem.c": {"bug kinds": [
        "linux:iomem::less initial decrement",
        "linux:iomem::more initial at exit"
      ]}}}
    },
    "linux:idr": {
      "description": "...",
      "template": "Argument signatures for Linux kernel modules",
      "ASE": {"request aspects": {"linux/idr.request.aspect": {}}},
      "TR": {"templates": {
        "linux/idr.c.tmpl": {},
        "linux/idr.aspect.tmpl": {}
      }},
      "RSG": {"models": {"$linux/idr.c": {
          "bug kinds": [
            "linux:idr::double init",
            "linux:idr::not initialized",
            "linux:idr::destroyed before usage",
            "linux:idr::more at exit"
          ]
      }}}
    },
    "linux:gendisk": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/gendisk.c": {"bug kinds": [
        "linux:gendisk::double allocation",
        "linux:gendisk::use before allocation",
        "linux:gendisk::delete before add",
        "linux:gendisk::free before allocation",
        "linux:gendisk::more initial at exit"
      ]}}}
    },
    "linux:blk:queue": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/blk/queue.c": {"bug kinds": [
        "linux:blk:queue::double allocation",
        "linux:blk:queue::use before allocation",
        "linux:blk:queue::more initial at exit"
      ]}}}
    },
    "linux:alloc:resource": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/memory.c": {"bug kinds": [
        "linux:alloc:resource::more at exit",
        "linux:alloc:resource::less at exit"
      ]}}}
    },
    "linux:usb:register": {
      "description": "Error handling for usb register in probe()",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/usb/register.c": {"bug kinds": ["linux:usb:register::wrong return value"]}}}
    },
    "linux:netdev": {
      "description": "Error handling for netdev in probe()",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/netdev.c": {"bug kinds": ["linux:netdev::wrong return value"]}}}
    },
    "linux:usb:gadget": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/usb/gadget.c": {"bug kinds": [
        "linux:usb:gadget::class registration with usb gadget",
        "linux:usb:gadget::class deregistration with usb gadget",
        "linux:usb:gadget::chrdev registration with usb gadget",
        "linux:usb:gadget::chrdev deregistration with usb gadget",
        "linux:usb:gadget::double usb gadget registration",
        "linux:usb:gadget::double usb gadget deregistration",
        "linux:usb:gadget::usb gadget registered at exit"
      ]}}}
    },
    "linux:class": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/class.c": {"bug kinds": [
        "linux:class::double registration",
        "linux:class::double deregistration",
        "linux:class::registered at exit"
      ]}}}
    },
    "linux:chrdev": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/chrdev.c": {"bug kinds": [
        "linux:chrdev::double registration",
        "linux:chrdev::double deregistration",
        "linux:chrdev::registered at exit"
      ]}}}
    },
    "linux:sock": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/locksock.c": { "bug kinds": [
        "linux:sock::all locked sockets must be released",
        "linux:sock::double release"
      ]}}}
    },
    "linux:rtnl": {
      "description": "...",
      "template": "Linux kernel modules",
      "RSG": {"models": {"linux/rtnl.c": { "bug kinds": [
        "linux:rtnl::double lock",
        "linux:rtnl::lock on exit",
        "linux:rtnl::double unlock"
      ]}}}
    }
  }
}
