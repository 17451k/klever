# Generated by Django 2.0.3 on 2018-04-27 09:41

import os
import time
import zipfile
from io import BytesIO

from django.core.files import File
from django.db import migrations, models

import reports.models
from bridge.vars import ERROR_TRACE_FILE
from bridge.utils import unique_id


def clear_comparison_cache(apps, schema_editor):
    apps.get_model("reports", "CompareJobsInfo").objects.all().delete()


def add_unique_trace_id(apps, schema_editor):
    for unsafe in apps.get_model("reports", "ReportUnsafe").objects.all():
        unsafe.trace_id = unique_id()
        unsafe.save()
        time.sleep(0.1)


def split_trace_and_source(apps, schema_editor):
    old_archives = set()
    for unsafe in apps.get_model("reports", "ReportUnsafe").objects.all():
        trace_inmem = BytesIO()
        source_inmem = BytesIO()
        with unsafe.error_trace as et_fp:
            old_archives.add(et_fp.name)
            with zipfile.ZipFile(et_fp, mode='r') as et_zip:
                with zipfile.ZipFile(trace_inmem, 'w') as t_zip:
                    with zipfile.ZipFile(source_inmem, 'w') as s_zip:
                        for item in et_zip.infolist():
                            if (item.filename == ERROR_TRACE_FILE):
                                t_zip.writestr(item, et_zip.read(item.filename))
                            else:
                                s_zip.writestr(item, et_zip.read(item.filename))
        trace_inmem.seek(0)
        source_inmem.seek(0)
        unsafe.source = apps.get_model("reports", "ErrorTraceSource")(root=unsafe.root)
        unsafe.source.add_sources('Source.zip', source_inmem, save=True)
        unsafe.add_trace('ErrorTrace.zip', trace_inmem, save=True)
    # TODO: delete
    with open('old-arch.txt', 'w') as fp:
        fp.write(str(old_archives))
    for fname in old_archives:
        fpath = os.path.join('media', fname)
        if os.path.exists(fpath):
            os.remove(fpath)


class Migration(migrations.Migration):
    dependencies = [('reports', '0001_initial')]

    operations = [
        migrations.CreateModel(
            name='AttrFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('file', models.FileField(upload_to=reports.models.get_attr_data_path)),
                ('root', models.ForeignKey(on_delete=models.deletion.CASCADE, to='reports.ReportRoot')),
            ],
            options={'db_table': 'report_et_source'},
        ),
        migrations.CreateModel(
            name='ErrorTraceSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archive', models.FileField(upload_to='Unsafes/Sources/%Y/%m')),
                ('root', models.ForeignKey(on_delete=models.deletion.CASCADE, to='reports.ReportRoot')),
            ],
            options={'db_table': 'report_et_source'},
        ),
        migrations.RemoveField(model_name='comparejobsinfo', name='files_diff'),
        migrations.AddField(
            model_name='comparejobsinfo', name='attr_names',
            field=models.CharField(default='', max_length=64), preserve_default=False
        ),
        migrations.AddField(model_name='reportattr', name='associate', field=models.BooleanField(default=False)),
        migrations.AddField(model_name='reportattr', name='compare', field=models.BooleanField(default=False)),
        migrations.AddField(
            model_name='reportattr', name='data',
            field=models.ForeignKey(null=True, on_delete=models.deletion.CASCADE, to='reports.AttrFile'),
        ),
        migrations.AddField(
            model_name='reportunsafe', name='trace_id', field=models.CharField(max_length=32, null=True)
        ),
        migrations.AddField(
            model_name='reportunsafe', name='source',
            field=models.ForeignKey(null=True, on_delete=models.deletion.CASCADE, to='reports.ErrorTraceSource'),
        ),
        migrations.RunPython(clear_comparison_cache),
        migrations.RunPython(add_unique_trace_id),
        migrations.RunPython(split_trace_and_source),
        migrations.AlterField(
            model_name='reportunsafe', name='source',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE, to='reports.ErrorTraceSource'),
        ),
        migrations.AlterField(
            model_name='reportunsafe', name='trace_id',
            field=models.CharField(db_index=True, max_length=32, unique=True),
        ),
    ]
