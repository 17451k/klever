# Generated by Django 2.1.3 on 2019-03-21 12:14

import bridge.utils
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import reports.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalSources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archive', models.FileField(upload_to='Sources/%Y/%m')),
            ],
            options={
                'db_table': 'report_additional_sources',
            },
            bases=(bridge.utils.WithFilesMixin, models.Model),
        ),
        migrations.CreateModel(
            name='AttrFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=reports.models.get_attr_data_path)),
            ],
            options={
                'db_table': 'report_attr_file',
            },
            bases=(bridge.utils.WithFilesMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CompareJobsInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('names', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=64), size=None)),
            ],
            options={
                'db_table': 'cache_report_jobs_compare_info',
            },
        ),
        migrations.CreateModel(
            name='ComparisonLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'cache_report_comparison_link',
            },
        ),
        migrations.CreateModel(
            name='ComparisonObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('values', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), size=None)),
                ('verdict1', models.CharField(choices=[('0', 'Total safe'), ('1', 'Found all unsafes'), ('2', 'Found not all unsafes'), ('3', 'Unknown'), ('4', 'Unmatched'), ('5', 'Broken')], max_length=1)),
                ('verdict2', models.CharField(choices=[('0', 'Total safe'), ('1', 'Found all unsafes'), ('2', 'Found not all unsafes'), ('3', 'Unknown'), ('4', 'Unmatched'), ('5', 'Broken')], max_length=1)),
            ],
            options={
                'db_table': 'cache_report_comparison_object',
            },
        ),
        migrations.CreateModel(
            name='ComponentInstances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.CharField(max_length=20)),
                ('in_progress', models.PositiveIntegerField(default=0)),
                ('total', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'cache_report_component_instances',
            },
        ),
        migrations.CreateModel(
            name='ComponentResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.CharField(max_length=20, null=True)),
                ('cpu_time', models.BigIntegerField(default=0)),
                ('wall_time', models.BigIntegerField(default=0)),
                ('memory', models.BigIntegerField(default=0)),
            ],
            options={
                'db_table': 'cache_report_component_resource',
            },
        ),
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(db_index=True, max_length=128)),
                ('display', models.CharField(max_length=512)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'db_table': 'computer',
            },
        ),
        migrations.CreateModel(
            name='CoverageArchive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(default='', max_length=128)),
                ('archive', models.FileField(upload_to=reports.models.get_coverage_arch_dir)),
            ],
            options={
                'db_table': 'report_coverage_archive',
            },
            bases=(bridge.utils.WithFilesMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CoverageData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'cache_report_coverage_data',
            },
        ),
        migrations.CreateModel(
            name='CoverageDataStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('data', models.FileField(upload_to='CoverageData')),
            ],
            options={
                'db_table': 'cache_report_coverage_data_stat',
            },
            bases=(bridge.utils.WithFilesMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CoverageDataValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashsum', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=128)),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'cache_report_coverage_data_values',
            },
        ),
        migrations.CreateModel(
            name='CoverageFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('file', models.FileField(null=True, upload_to=reports.models.get_coverage_dir)),
                ('covered_lines', models.PositiveIntegerField(default=0)),
                ('covered_funcs', models.PositiveIntegerField(default=0)),
                ('total_lines', models.PositiveIntegerField(default=0)),
                ('total_funcs', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'cache_report_coverage_file',
            },
            bases=(bridge.utils.WithFilesMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OriginalSources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(db_index=True, max_length=128, unique=True)),
                ('archive', models.FileField(upload_to='Sources/%Y/%m')),
            ],
            options={
                'db_table': 'report_original_sources',
            },
            bases=(bridge.utils.WithFilesMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(db_index=True, max_length=255)),
                ('cpu_time', models.BigIntegerField(null=True)),
                ('wall_time', models.BigIntegerField(null=True)),
                ('memory', models.BigIntegerField(null=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'db_table': 'report',
            },
        ),
        migrations.CreateModel(
            name='ReportAttr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=64, unique=True)),
                ('value', models.CharField(max_length=255)),
                ('compare', models.BooleanField(default=False)),
                ('associate', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'report_attrs',
            },
        ),
        migrations.CreateModel(
            name='ReportComponentLeaf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'cache_report_component_leaf',
            },
        ),
        migrations.CreateModel(
            name='ReportRoot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jobs.Job')),
            ],
            options={
                'db_table': 'report_root',
            },
        ),
        migrations.CreateModel(
            name='ReportComponent',
            fields=[
                ('report_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='reports.Report')),
                ('component', models.CharField(max_length=20)),
                ('verification', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('finish_date', models.DateTimeField(null=True)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('log', models.FileField(null=True, upload_to=reports.models.get_component_path)),
                ('verifier_input', models.FileField(null=True, upload_to=reports.models.get_component_path)),
            ],
            options={
                'db_table': 'report_component',
            },
            bases=(bridge.utils.WithFilesMixin, 'reports.report'),
        ),
        migrations.CreateModel(
            name='ReportSafe',
            fields=[
                ('report_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='reports.Report')),
                ('proof', models.FileField(null=True, upload_to='Safes/%Y/%m')),
            ],
            options={
                'db_table': 'report_safe',
            },
            bases=(bridge.utils.WithFilesMixin, 'reports.report'),
        ),
        migrations.CreateModel(
            name='ReportUnknown',
            fields=[
                ('report_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='reports.Report')),
                ('component', models.CharField(max_length=20)),
                ('problem_description', models.FileField(upload_to='Unknowns/%Y/%m')),
            ],
            options={
                'db_table': 'report_unknown',
            },
            bases=(bridge.utils.WithFilesMixin, 'reports.report'),
        ),
        migrations.CreateModel(
            name='ReportUnsafe',
            fields=[
                ('report_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='reports.Report')),
                ('trace_id', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                ('error_trace', models.FileField(upload_to='Unsafes/%Y/%m')),
            ],
            options={
                'db_table': 'report_unsafe',
            },
            bases=(bridge.utils.WithFilesMixin, 'reports.report'),
        ),
    ]
