# Generated by Django 2.1.3 on 2019-03-21 12:14

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Decision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(choices=[('URGENT', 'Urgent'), ('HIGH', 'High'), ('LOW', 'Low'), ('IDLE', 'Idle')], max_length=6)),
                ('error', models.CharField(max_length=1024, null=True)),
                ('fake', models.BooleanField(default=False)),
                ('start_date', models.DateTimeField(null=True)),
                ('finish_date', models.DateTimeField(null=True)),
                ('tasks_total', models.PositiveIntegerField(default=0)),
                ('tasks_pending', models.PositiveIntegerField(default=0)),
                ('tasks_processing', models.PositiveIntegerField(default=0)),
                ('tasks_finished', models.PositiveIntegerField(default=0)),
                ('tasks_error', models.PositiveIntegerField(default=0)),
                ('tasks_cancelled', models.PositiveIntegerField(default=0)),
                ('solutions', models.PositiveIntegerField(default=0)),
                ('total_sj', models.PositiveIntegerField(null=True)),
                ('failed_sj', models.PositiveIntegerField(null=True)),
                ('solved_sj', models.PositiveIntegerField(null=True)),
                ('expected_time_sj', models.PositiveIntegerField(null=True)),
                ('start_sj', models.DateTimeField(null=True)),
                ('finish_sj', models.DateTimeField(null=True)),
                ('gag_text_sj', models.CharField(max_length=128, null=True)),
                ('total_ts', models.PositiveIntegerField(null=True)),
                ('failed_ts', models.PositiveIntegerField(null=True)),
                ('solved_ts', models.PositiveIntegerField(null=True)),
                ('expected_time_ts', models.PositiveIntegerField(null=True)),
                ('start_ts', models.DateTimeField(null=True)),
                ('finish_ts', models.DateTimeField(null=True)),
                ('gag_text_ts', models.CharField(max_length=128, null=True)),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.JobFile')),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='jobs.Job')),
            ],
            options={
                'db_table': 'decision',
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=128)),
                ('status', models.CharField(choices=[('USER_OCCUPIED', 'User occupied'), ('HEALTHY', 'Healthy'), ('AILING', 'Ailing'), ('DISCONNECTED', 'Disconnected')], max_length=13)),
            ],
            options={
                'db_table': 'node',
            },
        ),
        migrations.CreateModel(
            name='NodesConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu', models.CharField(max_length=128, verbose_name='CPU model')),
                ('cores', models.PositiveSmallIntegerField(verbose_name='CPU number')),
                ('ram', models.BigIntegerField(verbose_name='RAM memory')),
                ('memory', models.BigIntegerField(verbose_name='Disk memory')),
            ],
            options={
                'db_table': 'nodes_configuration',
            },
        ),
        migrations.CreateModel(
            name='Scheduler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Klever', 'Klever'), ('VerifierCloud', 'VerifierCloud')], db_index=True, max_length=15)),
                ('status', models.CharField(choices=[('HEALTHY', 'Healthy'), ('AILING', 'Ailing'), ('DISCONNECTED', 'Disconnected')], default='AILING', max_length=15)),
            ],
            options={
                'db_table': 'scheduler',
            },
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('archname', models.CharField(max_length=256)),
                ('archive', models.FileField(upload_to='Service')),
                ('description', django.contrib.postgres.fields.jsonb.JSONField()),
                ('decision', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solutions_set', to='service.Decision')),
            ],
            options={
                'db_table': 'solution',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('FINISHED', 'Finished'), ('ERROR', 'Error'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=10)),
                ('error', models.CharField(max_length=1024, null=True)),
                ('archname', models.CharField(max_length=256)),
                ('archive', models.FileField(upload_to='Service')),
                ('description', django.contrib.postgres.fields.jsonb.JSONField()),
                ('decision', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='service.Decision')),
            ],
            options={
                'db_table': 'task',
            },
        ),
        migrations.CreateModel(
            name='VerificationTool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('version', models.CharField(max_length=128)),
                ('scheduler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Scheduler')),
            ],
            options={
                'db_table': 'verification_tool',
            },
        ),
        migrations.CreateModel(
            name='Workload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cores', models.PositiveSmallIntegerField(verbose_name='Reserved CPU number')),
                ('ram', models.BigIntegerField(verbose_name='Reserved RAM memory')),
                ('memory', models.BigIntegerField(verbose_name='Reserved disk memory')),
                ('jobs', models.PositiveIntegerField(verbose_name='Running verification jobs')),
                ('for_jobs', models.BooleanField(verbose_name='Available for jobs')),
                ('tasks', models.PositiveIntegerField(verbose_name='Running verification tasks')),
                ('for_tasks', models.BooleanField(verbose_name='Available for tasks')),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='workload', to='service.Node')),
            ],
            options={
                'db_table': 'workload',
            },
        ),
        migrations.AddField(
            model_name='solution',
            name='task',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='solution', to='service.Task'),
        ),
        migrations.AddField(
            model_name='node',
            name='config',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.NodesConfiguration'),
        ),
        migrations.AddField(
            model_name='decision',
            name='scheduler',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='service.Scheduler'),
        ),
    ]
